dataset:
  # 'NCaltech101' or 'NCaltech101_ObjectDetection', 'Prophesee', 'NCars', 'Kitty_ObjectDetection',
  # 'Kitty_ObjectDetection_Image'
  # when using 'Kitty_ObjectDetection_Image': set event_representation to 'dense_image', else to 'histogram'
  name: 'Kitty_ObjectDetection_Image'
  event_representation: 'dense_image'  # ['histogram', 'event_queue', 'dense_image']
  # mode for selecting nr of events to use for histogram:
  # 'fixed': use value of 'nr_events_window';
  # 'timeframe': use events equivalent to a specified timeframe (currently only supported for 'Kitty_ObjectDetection')
  event_window_mode: 'timeframe'  # ['fixed', 'timeframe']
  ncaltech101:
    dataset_path: "data/N-Caltech101"
    # Single classes e.g. ['anchor', 'helicopter', 'Motorbikes'] or 'all' for all classes
    object_classes: 'all'
    height: 180
    width: 240
    nr_events_window: 50000
    timeframe_events_window: -1  # milliseconds
  ncars:
    dataset_path: 'data/N-Cars'
    object_classes: ['no_car', 'car']
    height: 100
    width: 120
    nr_events_window: 25000
    timeframe_events_window: -1  # milliseconds
  ncaltech101_objectdetection:
    dataset_path: "/data/NCaltech101_ObjectDetection"
    object_classes: 'all'
    height: 180
    width: 240
    nr_events_window: 25000
    timeframe_events_window: -1  # milliseconds
  kitty_objectdetection:
    dataset_path: "/media/user/Vault_4/HiWi_IGD/KITTI_dataset"
    # only 'all', multiple classes per sample possible
    object_classes: 'all'
    # set image size to model input size to avoid interpolating twice
    height: 287
    width: 415
    # positive integer or -1. if -1, don't limit nr of events (use all).
    nr_events_window: 175000
    timeframe_events_window: 42  # milliseconds, ~1 frame @ 24fps
  prophesee:
    dataset_path: "data/PropheseeG1"
    object_classes: 'all'
    height: 240
    width: 304
    nr_events_window: 25000
    timeframe_events_window: -1  # milliseconds

dir:
  log: 'log1/'
model:
  # ['fb_sparse_vgg', 'dense_vgg', 'fb_sparse_object_det', 'dense_object_det', 'yolo_fb_sparse', 'dense_yolo']
  model_name: 'dense_yolo'
optim:
  max_epochs: 175  # max number of epochs if early stopping does not trigger
  batch_size: 30  # batch size
  init_lr: 1e-4  # 1e-4
  # Set to "steps_lr: ~" if no scheduler is needed
  steps_lr: [70, 120, 150]  # [500, 1000, 1500]  # TODO
  factor_lr: 0.1
checkpoint:
  discard_suboptimal_checkpoints: True
  resume_training: False
  resume_file: ''
  # Networks trained for classification can be reused as starting point for object detection networks on trained
  # the same dataset
  use_pretrained: True
  pretrained_dense_vgg: ''
  pretrained_sparse_vgg: ''
  pretrained_sparse_yolo: '/code/sparse_yolo_pretrained_121.pth'
  pretrained_dense_yolo: '/code/dense_yolo_pretrained_295.pth'
hardware:
  # num_cpu_workers: {-1: auto, 0: main thread, >0: ...}
  num_cpu_workers: 32
  gpu_device: 0  # [0 or 'cpu']
